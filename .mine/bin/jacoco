#!/usr/bin/env bash

# set -o pipefail -o nounset

cmdname=$(basename $0)

cmdexist() { [[ -x "$(command -v $1)" ]]; }

require(){ ! cmdexist $1 && echo -e "${RED}Error: \"$1\" is not installed.\n${NC}" && usage; }

usage()
{
    cat << USAGE >&2
Usage:
    $cmdname [...options] 

    TODO
    -h | --help			display this message
    -v | --version		print jacoco version
         --dry-run		display maven command which will be print (and do not run it)
         --ignore-failures	generate report despite unit test failures
	 --file			path to the file with execution data (for 'agent' and 'report').
	 				default value is '${project.build.directory}/jacoco.exec.
	 --show			show report, opening it in your preferred browser
(wip)	 --integration		generate report on integration tests too
USAGE
    exit 1
}

require mvn

JACOCO_VERSION=0.8.3;
JACOCO="org.jacoco:jacoco-maven-plugin:${JACOCO_VERSION}"

MAVEN_ARGS=()
while [[ $# -gt 0 ]]
do
    case "$1" in
        -h | --help)
    	    usage
        ;;
	-v|--version)
	    echo $JACOCO_VERSION
	    exit 1
	;;
	--dry-run)
	    RUN_DRY=1
	    shift
	;;
	-b|--browser)
	    BROWSER="$2"
	    shift
	    shift
	;;
	--show)
	    SHOW_REPORT=1
	    shift
	;;
    	--ignore-failures)
	    MAVEN_ARGS+=("-DfailIfNoTests=false")
	    MAVEN_ARGS+=("-Dmaven.test.failure.ignore=true")
	    shift 
	;;
    	--file)
	    # For 'prepare-agent' execution data destination
	    MAVEN_ARGS+=("-Djacoco.destFile=$2")
	    MAVEN_ARGS+=("-Djacoco.append=true")
	    # For 'report' execution data source
	    MAVEN_ARGS+=("-Djacoco.dataFile=$2")
	    shift
	    shift
	;;
	*) # save any argument in an array for later
	    MAVEN_ARGS+=("$1")
	shift
	;;
esac
done

RUN_JACOCO=1

jacoco_prepare() {
    echo "${JACOCO}:prepare-agent "
}

jacoco_report() { 
    echo "${JACOCO}:report " 
#    echo "${JACOCO}:report-aggregate " 
}

jacoco_merge() { 
  # Cannot merge yet from command line
  mvn \
    ${JACOCO}:merge -Djacoco.fileSets=*.exec -Djacoco.destfile="target/my_jacoco.exec" \
    $*
}

jacoco_it() { 
  mvn clean \
    ${JACOCO}:prepare-agent-integration \
    install \
    ${JACOCO}:report-integration \
    $*
}

find_browser() { 
  if [[ -z "$BROWSER" ]]; then
    if cmdexist firefox ; then
        BROWSER=firefox
    elif cmdexist chrome ; then
        BROWSER=chrome
    fi
  fi
  require $BROWSER
}

printclasspath() {
    find -type d -name classes | sed 's/^/-Djacoco.includes=/' | xargs echo
}

#
# MAIN
# 

set -- "${MAVEN_ARGS[@]}" # restore positional parameters

if [[ $RUN_JACOCO -gt 0 ]]; then
    jacoco_command="mvn clean "
    jacoco_command+=`jacoco_prepare`
    jacoco_command+="verify "
    jacoco_command+=`jacoco_report`
#    jacoco_command+=`printclasspath`" "
    jacoco_command+="$@"

    echo "Will run JaCoCo with following command:"
    echo -e "${BROWN}    $jacoco_command${NC}"
    if [[ $RUN_DRY -eq 0 ]]; then
        eval "$jacoco_command"
    fi
    RESULT=$?
fi
if [[ $RUN_JACOCO_INTEGRATION -gt 0 ]]; then
    jacoco_it
    RESULT=$?
fi
if [[ $SHOW_REPORT -gt 0 ]]; then
    find_browser
    $BROWSER "target/site/jacoco/index.html" &
fi

exit $RESULT
