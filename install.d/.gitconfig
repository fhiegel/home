[core]
	trustctime = false
	editor = vim
	fileMode = false
	autolf = true
	excludesfile = ~/.mine/etc/git/excludes
	hooksPath = ~/.gitsettings/hooks
	autocrlf = true
[color]
	ui = true
	branch = auto
	diff = auto
	interactive = auto
	status = auto
[diff]
	guitool = vimdiff
[merge]
	tool = vimdiff
[mergetool]
	keeptemporaries = false
	keepbackups = false
	prompt = false
	trustexitcode = false
[push]
	default = simple
[user]
	name = Fabien HIEGEL
	email = fhiegel@maisonsdumonde.com
[includeIf "gitdir:**\.?mine/*"]
  path = "${MINE_DIR}/etc/git/.gitconfig"

[alias]
	a = add
	aa = add --all
	ap = add --patch
	b = branch
	co = checkout
	cf = checkout -f
	cb = checkout -b
	#ci = commit
	#cim = commit -m
	com = commit
	#cp = cherry-pick
	cl = clone
	p = pull
	r = rebase
	s = status
	st = status -sbu
	sl = status -bu
	alias = config --get-regexp alias
	master = "!git add --all; git stash save; git checkout -f master; git pull origin master --no-commit"
	amend = "!git commit --amend --no-edit"
	pull-safe = "!git add --all && git stash save && git pull --no-commit && git stash pop"
	fixup = "!f(){ tofix=${1:-$(git log --pretty=\"%H|%s\" | grep -v \"|fixup\" | head -1 | cut -d '|' -f1)}; git commit -a --fixup=$tofix; }; f"
	quick = "!f(){ branchname=${1:-$(git rev-parse --abbrev-ref HEAD)}; git -c user.name=\"Quicker\" -c user.email='' commit -an -m \"Quick-commit on (${branchname})\"; };	f"
	save= "!git commit -an -m \"wip: Work in Progress savagely saved.\""
	last = log -1 --stat
	unstage = reset HEAD --
	dc = diff --cached
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all
	hide = update-index --assume-unchanged
	unhide = update-index --no-assume-unchanged
	hidden = "!git ls-files -v | grep ^h | cut -c 3-"
	user-evtech = "config --add user.email fhiegel@oui.sncf"
	user-mine = "config --add user.email fabien.hiegel@gmail.com"
	push-please         = "!git push --force-with-lease"
	push-first          = "!git push -u origin `git rev-parse --abbrev-ref HEAD`"
	push-feature        = "!git push -u origin HEAD:feature/`git rev-parse --abbrev-ref HEAD`"
	push-feature-please = "!git push -u origin HEAD:feature/`git rev-parse --abbrev-ref HEAD` --force-with-lease"
	push-bugfix         = "!git push -u origin HEAD:bugfix/`git rev-parse --abbrev-ref HEAD`"
	push-bugfix-please  = "!git push -u origin HEAD:bugfix/`git rev-parse --abbrev-ref HEAD` --force-with-lease"
[branch]
	autosetupmerge = always
	autosetuprebase = always
